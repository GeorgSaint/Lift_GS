SystemWindow subclass: #FigureOfWindow	instanceVariableNames: 'control'	classVariableNames: ''	poolDictionaries: ''	category: 'SLift-View'!!FigureOfWindow methodsFor: 'as yet unclassified' stamp: 'ss 5/26/2009 20:52'!initialize	super initialize.	self openInWorld;	position:50@50;	height: 325;	width: 600;	color: Color lightBlue;	borderColor: Color black;	setLabel: 'Lift machine'! !ScrollableField subclass: #LiftConsol	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'SLift-View'!!LiftConsol methodsFor: 'as yet unclassified' stamp: 'ss 5/26/2009 23:17'!initialize	super initialize.	self height: 95.	self width: 500.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!LiftConsol class	instanceVariableNames: ''!RectangleMorph subclass: #LiftField	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'SLift-View'!!LiftField methodsFor: 'as yet unclassified' stamp: 'ss 5/27/2009 11:00'!addAllCount	| morph |	morph := TextMorph new.	morph position: self position + (55@3)." bounds: (816@489					corner: 	939@510)."	morph contents: 'All people: 0  '.	morph autoFit:false.	"morph extension locked: true."	^morph.! !!LiftField methodsFor: 'as yet unclassified' stamp: 'ss 5/27/2009 12:15'!addCountOn: aFloor at: xy	| morph |	morph := TextMorph new.	morph position: self position + xy. "bounds: (811@1					corner: 	1025@2)."	morph contents: 'Want"s leave on ', aFloor asString, ' floor:                                                         '.	morph fontName:'Bitstream Vera Sans' size:13.	morph autoFit:false.	^morph.! !!LiftField methodsFor: 'as yet unclassified' stamp: 'ss 5/27/2009 00:15'!floor	| morph |	morph := TextMorph new.	morph position: self position + (20@5)." bounds: (762@498					corner: 	800@519)."	morph contents: '1'.	morph autoFit:false.	^morph.! !!LiftField methodsFor: 'as yet unclassified' stamp: 'ss 5/26/2009 23:13'!initialize	super initialize.	"self bounds: (726@484				corner: 	1041@689)."	self position:55@70.	self height: 200.	self width: 500.		self addMorph: self floor.	self addMorph: self lift.	self list.! !!LiftField methodsFor: 'as yet unclassified' stamp: 'ss 5/27/2009 00:15'!lift	| morph |	morph := TextMorph new.	morph position: self position + (5@20)." (743@526					corner: 	802@652)."	morph contents: '******'.	morph borderWidth: 11.	morph margins: 4@4.	morph autoFit:false.	^morph.! !!LiftField methodsFor: 'as yet unclassified' stamp: 'ss 5/26/2009 23:34'!list	| x |	x := 55.	self addMorph: self addAllCount.	self addMorph: (self addCountOn: 1 at: x@20).	self addMorph: (self addCountOn: 2 at: x@40).	self addMorph: (self addCountOn: 3 at: x@60).	self addMorph: (self addCountOn: 4 at: x@80).	self addMorph: (self addCountOn: 5 at: x@100).	self addMorph: (self addCountOn: 6 at: x@120).! !Morph subclass: #LiftMachine	instanceVariableNames: 'control win'	classVariableNames: ''	poolDictionaries: ''	category: 'SLift-View'!!LiftMachine methodsFor: 'updating' stamp: 'ss 5/27/2009 02:10'!update1Floor: aNumb	| text |	text := String new.	aNumb timesRepeat: [text := text ,'*'].	((self win submorphs at: 1) submorphs at: 6) contents: 'On 1 Floor: ', text.! !!LiftMachine methodsFor: 'updating' stamp: 'ss 5/27/2009 12:14'!update1Floor: aNumb and: aWant	| text |	text := String new.	aWant timesRepeat: [text := text ,'*'].	aNumb timesRepeat: [text := text ,'I'].	((self win submorphs at: 2) submorphs at: 6) contents: 'Want"s leave on 1 floor: ', text.! !!LiftMachine methodsFor: 'updating' stamp: 'ss 5/27/2009 01:58'!update2Floor: aNumb	((self win submorphs at: 1) submorphs at: 5) contents: aNumb asString.! !!LiftMachine methodsFor: 'updating' stamp: 'ss 5/27/2009 12:14'!update2Floor: aNumb and: aWant	| text |	text := String new.	aWant timesRepeat: [text := text ,'*'].	aNumb timesRepeat: [text := text ,'I'].	((self win submorphs at: 2) submorphs at: 5) contents: 'Want"s leave on 2 floor: ', text.! !!LiftMachine methodsFor: 'updating' stamp: 'ss 5/27/2009 01:57'!update3Floor: aNumb	((self win submorphs at: 1) submorphs at: 4) contents: aNumb asString.! !!LiftMachine methodsFor: 'updating' stamp: 'ss 5/27/2009 12:14'!update3Floor: aNumb and: aWant	| text |	text := String new.	aWant timesRepeat: [text := text ,'*'].	aNumb timesRepeat: [text := text ,'I'].	((self win submorphs at: 2) submorphs at: 4) contents: 'Want"s leave on 3 floor: ', text.! !!LiftMachine methodsFor: 'updating' stamp: 'ss 5/27/2009 01:57'!update4Floor: aNumb	((self win submorphs at: 1) submorphs at: 3) contents: aNumb asString.! !!LiftMachine methodsFor: 'updating' stamp: 'ss 5/27/2009 12:14'!update4Floor: aNumb and: aWant	| text |	text := String new.	aWant timesRepeat: [text := text ,'*'].	aNumb timesRepeat: [text := text ,'I'].	((self win submorphs at: 2) submorphs at: 3) contents: 'Want"s leave on 4 floor: ', text.! !!LiftMachine methodsFor: 'updating' stamp: 'ss 5/27/2009 01:57'!update5Floor: aNumb	((self win submorphs at: 1) submorphs at: 2) contents: aNumb asString.! !!LiftMachine methodsFor: 'updating' stamp: 'ss 5/27/2009 12:13'!update5Floor: aNumb and: aWant	| text |	text := String new.	aWant timesRepeat: [text := text ,'*'].	aNumb timesRepeat: [text := text ,'I'].	((self win submorphs at: 2) submorphs at: 2) contents: 'Want"s leave on 5 floor: ', text.! !!LiftMachine methodsFor: 'updating' stamp: 'ss 5/27/2009 01:57'!update6Floor: aNumb	((self win submorphs at: 1) submorphs at: 1) contents: aNumb asString.! !!LiftMachine methodsFor: 'updating' stamp: 'ss 5/27/2009 12:13'!update6Floor: aNumb and: aWant	| text |	text := String new.	aWant timesRepeat: [text := text ,'*'].	aNumb timesRepeat: [text := text ,'I'].	((self win submorphs at: 2) submorphs at: 1) contents: 'Want"s leave on 6 floor: ', text.! !!LiftMachine methodsFor: 'updating' stamp: 'ss 5/27/2009 10:32'!updateAllCount: aNumb	((self win submorphs at: 2) submorphs at: 7) contents: 'All people: ', aNumb asString.! !!LiftMachine methodsFor: 'updating' stamp: 'ss 5/27/2009 10:35'!updateFloor: aNumb	((self win submorphs at: 2) submorphs at: 9) contents: aNumb asString.! !!LiftMachine methodsFor: 'updating' stamp: 'ss 5/27/2009 11:17'!updateLift: aNumb	| text |	text := String new.	aNumb timesRepeat: [text := text ,'*'].	((self win submorphs at: 2) submorphs at: 8) contents: aNumb asString .! !!LiftMachine methodsFor: 'as yet unclassified' stamp: 'ss 5/27/2009 00:11'!addInputField	| morph |	morph := TextMorph new.	morph borderWidth: 2.	" bounds: (816@489					corner: 	939@510)."	morph contents: '1      '.	morph autoFit:false.	"morph extension locked: true."	^morph.! !!LiftMachine methodsFor: 'as yet unclassified' stamp: 'ss 5/27/2009 01:06'!addMan	self control addMan: (self win submorphs at: 3) text.! !!LiftMachine methodsFor: 'as yet unclassified' stamp: 'ss 5/27/2009 00:58'!changePower	| powerOn btn |	powerOn := self control powerChange.	btn := self findPowerButton.	btn notNil ifTrue: [btn label contents: (powerOn											ifTrue: ['Power on']											ifFalse: ['Power off'])].		! !!LiftMachine methodsFor: 'as yet unclassified' stamp: 'ss 5/27/2009 01:29'!clearLift: wind	((wind submorphs at: 1) submorphs at: 8) contents: '   '.! !!LiftMachine methodsFor: 'as yet unclassified' stamp: 'ss 5/27/2009 01:23'!exit	self control quit.	self win delete.! !!LiftMachine methodsFor: 'as yet unclassified' stamp: 'ss 5/27/2009 00:56'!findPowerButton	^self win allMorphs detect: [:m | m knownName = 'power'] ifNone:[]! !!LiftMachine methodsFor: 'as yet unclassified' stamp: 'ss 5/27/2009 01:21'!initialize	|button1 button2 wind scroll input button3 |	wind:=FigureOfWindow new.		button3 := self makeButton: 'Exit' action: #exit state: nil.	wind addMorph: button3.	button3 position: wind position+(560@300).	button1 := self makeButton: 'Power off' action: #changePower state: nil.	button1 name: 'power'.	wind addMorph: button1.	button1 position: wind position+(510@30).	button2 := self makeButton: 'Create man' action: #addMan state: nil.	wind addMorph: button2.	button2 position: wind position+(510@60).	input := self addInputField.	wind addMorph: input.	input position: wind position+(510@90).		"field:=PluggableButtonMorph on: self getState: nil action: #addCoord .	field		useRoundedCorners;		color: Color yellow;		height: 300;		width: 500.   		win addMorph: field.	field position: win position+(3@20)."		wind addMorph: LiftField new.	self clearLift: wind.	scroll := LiftConsol new.	wind addMorph: scroll.	scroll position: wind position+(5@225).	self win: wind.! !!LiftMachine methodsFor: 'as yet unclassified' stamp: 'ss 5/26/2009 19:01'!makeButton: label action: actionSymbol state: stateSymbol	| btn labelMorph |	btn := PluggableButtonMorph				on: self				getState: stateSymbol				action: actionSymbol.	labelMorph := StringMorph contents: label.	labelMorph emphasis: 1.	btn		label: labelMorph;		useRoundedCorners;			onColor: Color veryLightGray offColor: Color lightGray;		borderWidth: 1;		borderColor: #raised.	btn label color: Color darkGray.	^btn! !!LiftMachine methodsFor: 'accessing' stamp: 'ss 5/26/2009 19:02'!control	"Answer the value of control"	^ control! !!LiftMachine methodsFor: 'accessing' stamp: 'ss 5/26/2009 19:02'!control: anObject	"Set the value of control"	control _ anObject! !!LiftMachine methodsFor: 'accessing' stamp: 'ss 5/27/2009 00:47'!win	"Answer the value of win"	^ win! !!LiftMachine methodsFor: 'accessing' stamp: 'ss 5/27/2009 00:47'!win: anObject	"Set the value of win"	win _ anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!LiftMachine class	instanceVariableNames: ''!!LiftMachine class methodsFor: 'as yet unclassified' stamp: 'ss 5/26/2009 19:19'!createWith: aControl	^self new control: aControl.! !